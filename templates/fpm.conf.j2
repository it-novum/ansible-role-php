[{{ php_fpm_poolname }}]
user = {{ php_fpm_user }}
group = {{ php_fpm_user }}

listen = {{ php_fpm_socket }}
listen.owner = www-data
listen.group = www-data
listen.mode = 0660
;listen.allowed_clients = 127.0.0.1

; Specify the nice(2) priority to apply to the pool processes (only if set)
; The value can vary from -19 (highest priority) to 20 (lower priority)
; Note: - It will only work if the FPM master process is launched as root
;       - The pool processes will inherit the master process priority
;         unless it specified otherwise
; Default Value: no set
; priority = -19

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
;             pm.max_children      - the maximum number of children that can
;                                    be alive at the same time.
;             pm.start_servers     - the number of children created on startup.
;             pm.min_spare_servers - the minimum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is less than this
;                                    number then some children will be created.
;             pm.max_spare_servers - the maximum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is greater than this
;                                    number then some children will be killed.
;  ondemand - no children are created at startup. Children will be forked when
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that
;                                         can be alive at the same time.
;             pm.process_idle_timeout   - The number of seconds after which
;                                         an idle process will be killed.
; Note: This value is mandatory.
pm = dynamic
pm.max_children = 100
pm.start_servers = 5
pm.min_spare_servers = 5
pm.max_spare_servers = 10
pm.process_idle_timeout = 1800s;
pm.max_requests = 1000

chdir = {{ php_fpm_chdir }}
; error logging
catch_workers_output = yes

env[TMP] = {{ php_fpm_tmpdir }}
env[TMPDIR] = {{ php_fpm_tmpdir }}
env[TEMP] = {{ php_fpm_tmpdir }}

php_admin_flag[display_errors] = off
php_admin_value[error_log] =
php_admin_flag[log_errors] = off
php_admin_flag[display_startup_errors] = off
php_admin_value[error_reporting] = E_ALL & ~E_DEPRECATED & ~E_STRICT

php_flag[file_uploads] = on
php_admin_value[max_file_uploads] = 42
php_admin_value[upload_max_filesize] = 128M

php_flag[allow_url_fopen] = on
php_admin_value[memory_limit] = {{ php_ini_memory_limit }}
php_admin_value[post_max_size] = 128M
php_admin_value[max_input_time] = 60
php_admin_value[max_execution_time] = 300
php_admin_value[max_input_vars] = 10000
php_admin_value[default_socket_timeout] = 60

php_flag[short_open_tag] = on
php_value[default_charset] = UTF-8
php_value[date.timezone] = Europe/Berlin
php_value[session.gc_maxlifetime] = 604800
php_value[session.cookie_lifetime] = 0
php_admin_value[open_basedir] = {{ php_fpm_chdir }}:{{ php_fpm_tmpdir }}:/tmp/:/usr/share/php/:/usr/bin/:/dev/urandom:/dev/random

